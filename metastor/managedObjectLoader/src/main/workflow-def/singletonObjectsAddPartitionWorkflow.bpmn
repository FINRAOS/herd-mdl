<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" xmlns:tns="http://www.activiti.org/test" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.activiti.org/test" id="m1443994744894" name="">
  <process id="METASTOR.singletonObjectsAddPartitionWorkflow" name="Add Partitions Workflow for Singleton Objects" isExecutable="true" isClosed="false" processType="None">
    <startEvent id="start_workflow" name="Start"></startEvent>
    <endEvent id="end_workflow" name="End"></endEvent>
    <serviceTask id="createCluster" name="Aquire Cluster" default="flow33" activiti:class="org.finra.herd.service.activiti.task.CreateEmrCluster">
      <extensionElements>
        <activiti:field name="namespace">
          <activiti:string><![CDATA[metastor]]></activiti:string>
        </activiti:field>
        <activiti:field name="emrClusterDefinitionName">
          <activiti:expression><![CDATA[${clusterDefinitionName}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="emrClusterName">
          <activiti:expression><![CDATA[${clustername}]]></activiti:expression>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <scriptTask id="prepareEmailContent" name="Prepare Email Content" scriptFormat="javascript" activiti:autoStoreVariables="false">
      <script>
      var emailMessage="";
      if (createCluster_taskStatus == 'ERROR') {
          emailMessage=createCluster_taskErrorMessage;
			  }
      else if (execution.hasVariable("getBusinessObjectFormat_taskStatus")) {
	       if (getBusinessObjectFormat_taskStatus == 'ERROR') {
	          emailMessage=getBusinessObjectFormat_taskErrorMessage;
			  }
			}
      else if (execution.hasVariable("startProcessor_taskStatus")) {
	       if (startProcessor_taskStatus == 'ERROR') {
	          emailMessage=startProcessor_taskErrorMessage;
			  }
			}
	  else {
	      emailMessage="Error in workflow";
	  }
	  execution.setVariable("emailmsg",emailMessage);
      </script>
    </scriptTask>
    <scriptTask id="scripttask1" name="Initialize Variables" activiti:async="true" scriptFormat="javascript" activiti:autoStoreVariables="false">
      <script>    if (!execution.hasVariable("maxRetries")) {
          execution.setVariable("maxRetries", 5);
    }

  execution.setVariable("noOfStatusRetries", 0);
 execution.setVariable("noOfDBRetries", 0);


    if ( !execution.hasVariable("maxDBRetries")) {
         execution.setVariable("maxDBRetries", 5);
    }

         execution.setVariable("storageName", "?");
         execution.setVariable("collectStats", "true");
         execution.setVariable("clustername", "metastore");

          if(execution.hasVariable("startPartitionValue")) {
              execution.setVariable("stepDates", endPartitionValue+"__"+startPartitionValue);
              var businessObjectPartitionKey = JSON.parse(execution.getVariable("getBusinessObjectFormat_jsonResponse")).partitionKey;
              execution.setVariable("businessObjectPartitionKey", businessObjectPartitionKey);
           }
          else
            {
                var objDataJson = execution.getVariable("notification_businessObjectData");
                execution.setVariable("notification_partitionValue", JSON.parse(objDataJson).partitionValue);
                execution.setVariable("stepDates", notification_partitionValue);

                execution.setVariable("notification_businessObjectDefinitionNamespace", JSON.parse(objDataJson).namespace);
                execution.setVariable("notification_businessObjectDefinitionName", JSON.parse(objDataJson).businessObjectDefinitionName);
                execution.setVariable("notification_businessObjectFormatUsage", JSON.parse(objDataJson).businessObjectFormatUsage);
                execution.setVariable("notification_businessObjectFormatFileType", JSON.parse(objDataJson).businessObjectFormatFileType);
                execution.setVariable("businessObjectPartitionKey", JSON.parse(objDataJson).partitionKey);
            }

          var jdbcExecutionRequest = {
                   connection : {
                   url : 'jdbc:mysql://'.concat(execution.getVariable('dburl'),'/metastor?useSSL=true&amp;requireSSL=true&amp;verifyServerCertificate=false'),
                   username : 'MS_Hive_0_13',
                   password : '${password}',
                   databaseType : 'MYSQL'
              },
              statements : [ {
                  type : 'UPDATE',
                  sql : "insert into DM_NOTIFICATION (NAMESPACE,OBJECT_DEF_NAME,USAGE_CODE,FILE_TYPE,PARTITION_VALUES,WF_TYPE, CORRELATION_DATA, EXECUTION_ID, CLUSTER_NAME, PARTITION_KEY) VALUES ('".concat(execution.getVariable('notification_businessObjectDefinitionNamespace'), '\',\'',
                  execution.getVariable('notification_businessObjectDefinitionName'), '\',\'', execution.getVariable('notification_businessObjectFormatUsage'),'\',\'',
                  execution.getVariable('notification_businessObjectFormatFileType'), '\',\'', execution.getVariable('stepDates'), '\',1,\'',
                  execution.getVariable('notification_correlationData'), '\',\'', execution.id, '\',\'', execution.getVariable('clustername'),'\',\'', execution.getVariable('businessObjectPartitionKey'),'\')')
              } ],
              "s3PropertiesLocation" : {
                  "bucketName" : (execution.getVariable('s3_bucket')).substring(5),
                  "key" : "METASTOR/staging/deploy/rds/resources/db.properties"
              }
          };
              execution.setVariable('jdbcExecutionRequest', JSON.stringify(jdbcExecutionRequest));

      execution.setVariable("emrStepStatus", "");
      execution.setVariable("emrStepID", "");

        var next_date = new Date();
        next_date.setDate(next_date.getDate() + 1);
        var dd = next_date.getDate();
        var mm = next_date.getMonth() + 1;
        var yy = next_date.getFullYear();
        var next_date_formatted = yy + '-'+ mm + '-'+ dd;
        execution.setVariable("latestDay", next_date_formatted);

      </script>
    </scriptTask>
    <exclusiveGateway id="exclusivegateway1" name="Exclusive Gateway"></exclusiveGateway>
    <intermediateCatchEvent id="timerintermediatecatchevent1" name="TimerCatchEvent">
      <timerEventDefinition>
        <timeDuration>${retry_interval}</timeDuration>
      </timerEventDefinition>
    </intermediateCatchEvent>
    <sequenceFlow id="flow21" name="Retry" sourceRef="timerintermediatecatchevent1" targetRef="exclusivegateway1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${noOfRetries &lt; maxRetries}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow22" sourceRef="timerintermediatecatchevent1" targetRef="prepareEmailContent">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${noOfRetries >= maxRetries}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow33" name="Cluster Failed" sourceRef="createCluster" targetRef="timerintermediatecatchevent1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${createCluster_taskStatus == 'ERROR'}]]></conditionExpression>
    </sequenceFlow>
    <serviceTask id="emailWorkflowFailure" name="Send Email on Workflow Step Failure" activiti:type="mail">
      <extensionElements>
        <activiti:field name="to">
          <activiti:expression><![CDATA[${MailDL}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="subject">
          <activiti:expression><![CDATA[METASTOR - ${env} - Singleton Object Add Partition failed After ${noOfRetries} Retries for ${notification_businessObjectDefinitionNamespace}-${notification_businessObjectDefinitionName}-${notification_businessObjectFormatUsage}-${notification_businessObjectFormatFileType}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="text">
          <activiti:expression><![CDATA[${emailmsg}]]></activiti:expression>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow35" sourceRef="prepareEmailContent" targetRef="emailWorkflowFailure"></sequenceFlow>
    <sequenceFlow id="flow36" sourceRef="emailWorkflowFailure" targetRef="end_workflow"></sequenceFlow>
    <serviceTask id="getBusinessObjectFormat" name="Get Format Definition to retrieve partition key" activiti:async="true" activiti:class="org.finra.herd.service.activiti.task.GetBusinessObjectFormat">
      <extensionElements>
        <activiti:field name="namespace">
          <activiti:expression><![CDATA[${notification_businessObjectDefinitionNamespace}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="businessObjectDefinitionName">
          <activiti:expression><![CDATA[${notification_businessObjectDefinitionName}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="businessObjectFormatUsage">
          <activiti:expression><![CDATA[${notification_businessObjectFormatUsage}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="businessObjectFormatFileType">
          <activiti:expression><![CDATA[${notification_businessObjectFormatFileType}]]></activiti:expression>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <serviceTask id="save_to_db" name="Save To DB" activiti:class="org.finra.herd.service.activiti.task.ExecuteJdbc">
      <extensionElements>
        <activiti:field name="contentType">
          <activiti:string><![CDATA[json]]></activiti:string>
        </activiti:field>
        <activiti:field name="jdbcExecutionRequest">
          <activiti:expression><![CDATA[${jdbcExecutionRequest}]]></activiti:expression>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow55" sourceRef="save_to_db" targetRef="exclusivegateway1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${save_to_db_taskStatus == 'SUCCESS'}]]></conditionExpression>
    </sequenceFlow>
    <serviceTask id="mailtask1" name="Send Email on savetodb failure" activiti:type="mail">
      <extensionElements>
        <activiti:field name="to">
          <activiti:expression><![CDATA[${MailDL}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="subject">
          <activiti:expression><![CDATA[METASTOR - ${env} - Save to DB failed for ${notification_businessObjectDefinitionNamespace}-${notification_businessObjectDefinitionName}-${notification_businessObjectFormatUsage}-${notification_businessObjectFormatFileType}-${stepDates}]]></activiti:expression>
        </activiti:field>
        <activiti:field name="text">
          <activiti:expression><![CDATA[Save to DB failed for ${notification_businessObjectDefinitionNamespace}-${notification_businessObjectDefinitionName}-${notification_businessObjectFormatUsage}-${notification_businessObjectFormatFileType}-${stepDates}

    ${save_to_db_taskErrorMessage}]]></activiti:expression>
        </activiti:field>
      </extensionElements>
    </serviceTask>
    <sequenceFlow id="flow59" sourceRef="save_to_db" targetRef="timerintermediatecatchevent2">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${save_to_db_taskStatus != 'SUCCESS'}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow60" sourceRef="mailtask1" targetRef="end_workflow"></sequenceFlow>
    <sequenceFlow id="flow62" sourceRef="scripttask1" targetRef="save_to_db"></sequenceFlow>
    <scriptTask id="updateVariables" name="Update Variables" activiti:async="true" scriptFormat="javascript" activiti:autoStoreVariables="false">
      <script>
    if (execution.hasVariable("noOfRetries")) {
       var rt = parseInt(execution.getVariable("noOfRetries"))+1;
       execution.setVariable("noOfRetries", rt.toString());
       }
    else
       {
       execution.setVariable("noOfRetries", 0);
       }

    if (!execution.hasVariable("maxRetries")) {
          execution.setVariable("maxRetries", 5);
    }

  execution.setVariable("noOfStatusRetries", 0);


    if ( !execution.hasVariable("maxStatusRetries")) {
         execution.setVariable("maxStatusRetries", 5);
    }
      execution.setVariable("emrStepStatus", "");
      execution.setVariable("emrStepID", "");

      </script>
    </scriptTask>
    <sequenceFlow id="flow63" sourceRef="exclusivegateway1" targetRef="updateVariables"></sequenceFlow>
    <sequenceFlow id="flow64" sourceRef="updateVariables" targetRef="createCluster"></sequenceFlow>
    <sequenceFlow id="flow66" sourceRef="start_workflow" targetRef="getBusinessObjectFormat">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${notification_businessObjectData == '?'}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow67" sourceRef="getBusinessObjectFormat" targetRef="scripttask1"></sequenceFlow>
    <sequenceFlow id="flow68" sourceRef="start_workflow" targetRef="scripttask1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${notification_businessObjectData != '?'}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow69" name="Using Existing Cluster" sourceRef="createCluster" targetRef="end_workflow">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${createCluster_taskStatus == 'SUCCESS' }]]></conditionExpression>
    </sequenceFlow>
    <intermediateCatchEvent id="timerintermediatecatchevent2" name="TimerCatchEvent">
      <timerEventDefinition>
        <timeDuration>${retry_interval}</timeDuration>
      </timerEventDefinition>
    </intermediateCatchEvent>
    <sequenceFlow id="flow71" sourceRef="timerintermediatecatchevent2" targetRef="mailtask1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${noOfDBRetries >= maxDBRetries}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="updateDBRetry" name="updateDBRetry" activiti:async="true" scriptFormat="javascript" activiti:autoStoreVariables="false">
      <script>       var rt = parseInt(execution.getVariable("noOfDBRetries"))+1;
       execution.setVariable("noOfDBRetries", rt.toString());
      </script>
    </scriptTask>
    <sequenceFlow id="flow72" sourceRef="timerintermediatecatchevent2" targetRef="updateDBRetry">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${noOfDBRetries &lt; maxDBRetries}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow73" sourceRef="updateDBRetry" targetRef="save_to_db"></sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_METASTOR.singletonObjectsAddPartitionWorkflow">
    <bpmndi:BPMNPlane bpmnElement="METASTOR.singletonObjectsAddPartitionWorkflow" id="BPMNPlane_METASTOR.singletonObjectsAddPartitionWorkflow">
      <bpmndi:BPMNShape bpmnElement="start_workflow" id="BPMNShape_start_workflow">
        <omgdc:Bounds height="35.0" width="35.0" x="129.0" y="32.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="end_workflow" id="BPMNShape_end_workflow">
        <omgdc:Bounds height="35.0" width="35.0" x="232.0" y="720.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="createCluster" id="BPMNShape_createCluster">
        <omgdc:Bounds height="55.0" width="184.0" x="57.0" y="423.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="prepareEmailContent" id="BPMNShape_prepareEmailContent">
        <omgdc:Bounds height="55.0" width="136.0" x="505.0" y="600.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask1" id="BPMNShape_scripttask1">
        <omgdc:Bounds height="55.0" width="145.0" x="462.0" y="22.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway1" id="BPMNShape_exclusivegateway1">
        <omgdc:Bounds height="40.0" width="40.0" x="339.0" y="228.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="timerintermediatecatchevent1" id="BPMNShape_timerintermediatecatchevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="405.0" y="610.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="emailWorkflowFailure" id="BPMNShape_emailWorkflowFailure">
        <omgdc:Bounds height="58.0" width="151.0" x="685.0" y="600.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="getBusinessObjectFormat" id="BPMNShape_getBusinessObjectFormat">
        <omgdc:Bounds height="62.0" width="197.0" x="209.0" y="123.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="save_to_db" id="BPMNShape_save_to_db">
        <omgdc:Bounds height="55.0" width="105.0" x="685.0" y="22.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="mailtask1" id="BPMNShape_mailtask1">
        <omgdc:Bounds height="68.0" width="161.0" x="789.0" y="356.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="updateVariables" id="BPMNShape_updateVariables">
        <omgdc:Bounds height="55.0" width="145.0" x="79.0" y="318.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="timerintermediatecatchevent2" id="BPMNShape_timerintermediatecatchevent2">
        <omgdc:Bounds height="35.0" width="35.0" x="852.0" y="210.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="updateDBRetry" id="BPMNShape_updateDBRetry">
        <omgdc:Bounds height="55.0" width="145.0" x="920.0" y="22.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="flow21" id="BPMNEdge_flow21">
        <omgdi:waypoint x="422.0" y="610.0"></omgdi:waypoint>
        <omgdi:waypoint x="359.0" y="268.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="39.0" width="27.0" x="403.0" y="406.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow22" id="BPMNEdge_flow22">
        <omgdi:waypoint x="440.0" y="627.0"></omgdi:waypoint>
        <omgdi:waypoint x="505.0" y="627.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow33" id="BPMNEdge_flow33">
        <omgdi:waypoint x="149.0" y="478.0"></omgdi:waypoint>
        <omgdi:waypoint x="422.0" y="610.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="39.0" width="67.0" x="159.0" y="478.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow35" id="BPMNEdge_flow35">
        <omgdi:waypoint x="641.0" y="627.0"></omgdi:waypoint>
        <omgdi:waypoint x="685.0" y="629.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow36" id="BPMNEdge_flow36">
        <omgdi:waypoint x="760.0" y="658.0"></omgdi:waypoint>
        <omgdi:waypoint x="760.0" y="737.0"></omgdi:waypoint>
        <omgdi:waypoint x="267.0" y="737.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow55" id="BPMNEdge_flow55">
        <omgdi:waypoint x="737.0" y="77.0"></omgdi:waypoint>
        <omgdi:waypoint x="359.0" y="228.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow59" id="BPMNEdge_flow59">
        <omgdi:waypoint x="737.0" y="77.0"></omgdi:waypoint>
        <omgdi:waypoint x="869.0" y="210.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow60" id="BPMNEdge_flow60">
        <omgdi:waypoint x="869.0" y="424.0"></omgdi:waypoint>
        <omgdi:waypoint x="872.0" y="737.0"></omgdi:waypoint>
        <omgdi:waypoint x="267.0" y="737.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow62" id="BPMNEdge_flow62">
        <omgdi:waypoint x="607.0" y="49.0"></omgdi:waypoint>
        <omgdi:waypoint x="685.0" y="49.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow63" id="BPMNEdge_flow63">
        <omgdi:waypoint x="359.0" y="268.0"></omgdi:waypoint>
        <omgdi:waypoint x="151.0" y="318.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow64" id="BPMNEdge_flow64">
        <omgdi:waypoint x="151.0" y="373.0"></omgdi:waypoint>
        <omgdi:waypoint x="149.0" y="423.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow66" id="BPMNEdge_flow66">
        <omgdi:waypoint x="146.0" y="67.0"></omgdi:waypoint>
        <omgdi:waypoint x="307.0" y="123.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow67" id="BPMNEdge_flow67">
        <omgdi:waypoint x="307.0" y="123.0"></omgdi:waypoint>
        <omgdi:waypoint x="534.0" y="77.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow68" id="BPMNEdge_flow68">
        <omgdi:waypoint x="164.0" y="49.0"></omgdi:waypoint>
        <omgdi:waypoint x="462.0" y="49.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow69" id="BPMNEdge_flow69">
        <omgdi:waypoint x="149.0" y="478.0"></omgdi:waypoint>
        <omgdi:waypoint x="149.0" y="737.0"></omgdi:waypoint>
        <omgdi:waypoint x="232.0" y="737.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="39.0" width="100.0" x="79.0" y="561.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow71" id="BPMNEdge_flow71">
        <omgdi:waypoint x="869.0" y="245.0"></omgdi:waypoint>
        <omgdi:waypoint x="869.0" y="356.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow72" id="BPMNEdge_flow72">
        <omgdi:waypoint x="869.0" y="210.0"></omgdi:waypoint>
        <omgdi:waypoint x="992.0" y="77.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow73" id="BPMNEdge_flow73">
        <omgdi:waypoint x="920.0" y="49.0"></omgdi:waypoint>
        <omgdi:waypoint x="790.0" y="49.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>
